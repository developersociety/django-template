[tool.black]
line-length = 99
target-version = ["py312"]

[tool.djlint]
profile = "django"
indent = 2
blank_line_after_tag = "load,extends"
line_break_after_multiline_tag = true
close_void_tags = true
max_length = 120
# T002 - Double quotes should be used in tags
ignore = "T002"

[tool.djlint.per-file-ignores]
# Disable:
# D018 - Internal links should use the url ... pattern.
# H030 - Consider adding a meta description
# H031 - Consider adding meta keywords
"500.html" = "H030,H031"
"base.html" = "H030,H031"
"includes/footer.html" = "D018"
"includes/header.html" = "D018"

[tool.ruff]
extend-exclude = ["apps/*/migrations"]
src = ["apps"]
line-length = 99
target-version = "py312"

[tool.ruff.lint]
exclude = ["apps/*/migrations"]
extend-select = [
    "ERA",   # eradicate
    "YTT",   # flake8-2020
    "ASYNC", # flake8-async
    "S",     # flake8-bandit
    "BLE",   # flake8-blind-except
    "B",     # flake8-bugbear
    "A",     # flake8-builtins
    "COM",   # flake8-commas
    "C4",    # flake8-comprehensions
    "DTZ",   # flake8-datetimez
    "T10",   # flake8-debugger
    "DJ",    # flake8-django
    "EM",    # flake8-errmsg
    "EXE",   # flake8-executable
    "FA",    # flake8-future-annotations
    "INT",   # flake8-gettext
    "ISC",   # flake8-implicit-str-concat
    "ICN",   # flake8-import-conventions
    "LOG",   # flake8-logging
    "G",     # flake8-logging-format
    "INP",   # flake8-no-pep420
    "PIE",   # flake8-pie
    "T20",   # flake8-print
    "PYI",   # flake8-pyi
    "Q",     # flake8-quotes
    "RSE",   # flake8-raise
    "RET",   # flake8-return
    "SLOT",  # flake8-slots
    "SIM",   # flake8-simplify
    "TID",   # flake8-tidy-imports
    "TD",    # flake8-todos
    "TCH",   # flake8-type-checking
    "PTH",   # flake8-use-pathlib
    "FLY",   # flynt
    "I",     # isort
    "NPY",   # numpy-specific rules
    "PD",    # pandas-vet
    "N",     # pep8-naming
    "PERF",  # perflint
    "E",     # pycodestyle
    "W",     # pycodestyle
    "F",     # pyflakes
    "PGH",   # pygrep-hooks
    "PLC",   # pylint
    "PLE",   # pylint
    "PLW",   # pylint
    "UP",    # pyupgrade
    "FURB",  # refurb
    "RUF",   # ruff-specific rules
    "TRY",   # tryceratops
]
ignore = [
    "COM812", # flake8-commas: missing-trailing-comma
    "EM101",  # flake8-errmsg: raw-string-in-exception
    "ISC001", # flake8-implicit-str-concat: single-line-implicit-string-concatenation
    "RUF012", # ruff-specific rules: mutable-class-default
    "SIM105", # flake8-simplify: suppressible-exception
    "SIM108", # flake8-simplify: if-else-block-instead-of-if-exp
    "TD002",  # flake8-todos: missing-todo-author
    "TRY003", # tryceratops: raise-vanilla-args
]

[tool.ruff.lint.per-file-ignores]
"fabfile.py" = [
    "PGH004", # pygrep-hooks: blanket-noqa
]

[tool.ruff.lint.isort]
combine-as-imports = true
section-order = ["future", "standard-library", "django", "third-party", "first-party", "local-folder"]

[tool.ruff.lint.isort.sections]
"django" = ["django"]

[tool.ruff.lint.pep8-naming]
extend-ignore-names = [
    "assert*",
]
